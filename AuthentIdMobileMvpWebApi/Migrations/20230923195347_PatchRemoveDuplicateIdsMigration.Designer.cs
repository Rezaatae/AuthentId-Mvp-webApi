// <auto-generated />
using System;
using AuthentIdMobileMvpWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthentIdMobileMvpWebApi.Migrations
{
    [DbContext(typeof(AuthentIdDbContext))]
    [Migration("20230923195347_PatchRemoveDuplicateIdsMigration")]
    partial class PatchRemoveDuplicateIdsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthentIdMobileMvpWebApi.Models.AuthentIdAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionHeld")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthentIdAgents");
                });

            modelBuilder.Entity("AuthentIdMobileMvpWebApi.Models.AuthentIdScan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthentIdAgentId")
                        .HasColumnType("int");

                    b.Property<int>("AuthentIdUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScanDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ScanLatitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScanLongitude")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AuthentIdAgentId");

                    b.HasIndex("AuthentIdUserId");

                    b.ToTable("AuthentIdScans");
                });

            modelBuilder.Entity("AuthentIdMobileMvpWebApi.Models.AuthentIdUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthentIdUsers");
                });

            modelBuilder.Entity("AuthentIdMobileMvpWebApi.Models.AuthentIdScan", b =>
                {
                    b.HasOne("AuthentIdMobileMvpWebApi.Models.AuthentIdAgent", "AuthentIdAgent")
                        .WithMany("AuthentIdScans")
                        .HasForeignKey("AuthentIdAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthentIdMobileMvpWebApi.Models.AuthentIdUser", "AuthentIdUser")
                        .WithMany("AuthentIdScans")
                        .HasForeignKey("AuthentIdUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthentIdAgent");

                    b.Navigation("AuthentIdUser");
                });

            modelBuilder.Entity("AuthentIdMobileMvpWebApi.Models.AuthentIdAgent", b =>
                {
                    b.Navigation("AuthentIdScans");
                });

            modelBuilder.Entity("AuthentIdMobileMvpWebApi.Models.AuthentIdUser", b =>
                {
                    b.Navigation("AuthentIdScans");
                });
#pragma warning restore 612, 618
        }
    }
}
